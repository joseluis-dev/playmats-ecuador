---
import { AddToCartButton } from "@/components/AddToCartButton.tsx";
import Badge from "@/components/Badge.astro";
import Card from "@/components/Card.astro";
import Layout from "@/layouts/Layout.astro";
import { api } from "@/services/api.ts";
import type { Product, Category, Attribute, ResourceProduct, Resource } from "@/types";

// Fetch products from the API
const fetchData = async (): Promise<Product[]> => {
	const res = await api.get<Product[]>('products');
	return res;
}

const PRODUCTS = await fetchData();

---

<Layout title="Playmats EC - Catálogo">
	<section
		class="
			w-full max-w-screen-xl mx-auto
			grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4
			auto-rows-[25rem] gap-6
			p-8 md:p-12
		"
	>
		{
			PRODUCTS.map((product) => {
				// Define additional interface for the API response structure
				type ApiProduct = Product & {
					productResources?: {
						resource: Resource;
						isBanner: boolean;
					}[];
				};
				
				const apiProduct = product as ApiProduct;

				// Find banner image from resourceProducts or use first image if available
				const bannerResource = product.resourceProducts?.find((rp: ResourceProduct) => rp.isBanner)?.resource || 
									product.resourceProducts?.[0]?.resource ||
									apiProduct.productResources?.find(pr => pr.isBanner)?.resource || 
									apiProduct.productResources?.[0]?.resource;
				
				const imageUrl = bannerResource?.url || '';
				
				return (
					<a href={`/playmats/${product.id}`} class="
						rounded-xl
						group
					">
						<Card 
							class="text-[var(--color-text)]"
							id={product.id}
							title={product.name}
							subtitle="Etiquetas"
							price={product.price}
						>
							<div 
								slot="image"
								transition:name={`img-${product.id}`}
								class="
									absolute top-0 left-0 bottom-0
									h-full w-full
									group-hover:scale-110
									transition-scale duration-1000 ease-in-out
									opacity-90 -z-10
									bg-center bg-cover bg-no-repeat bg-blend-luminosity
								"
								style={`background-image: url(${imageUrl});`}
							/>
							<ul slot="content" class="w-full flex flex-wrap gap-2 text-sm">
								{product.categories?.map((category: Category) => (
									<Badge color={category.color} label={category.name} type="outline" />
								))}
								{
									product.attributes?.map((attribute: Attribute) => (
									<Badge color={attribute.color} label={attribute.name} type="outline" />
								))}
							</ul>
							<AddToCartButton
								client:visible
								className={`
									flex items-center justify-center gap-2
									absolute top-0 right-0 p-4 ring-1 ring-black/20 dark:ring-white/20
									rounded-rt-lg rounded-bl-lg bg-[var(--color-primary)]/90 hover:bg-[var(--color-primary)] transition-colors duration-300
								`}
								label="Añadir"
								product={product}
								slot="footer"
							/>
						</Card>
					</a>
				);
			})
		}
	</section>
</Layout>