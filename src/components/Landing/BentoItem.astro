---
interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  class?: string;
  href?: string;
}
const { class: className, title, subtitle, href } = Astro.props;
---

{
  href ? (
    <a class={`
      ${className}
      relative rounded-xl
      backdrop-blur-md
      border border-black/10
      shadow-inner shadow-white/10
      col-span-5
      group
      overflow-hidden
      !text-[var(--color-text)]
    `}
      href={href}
    >
      <slot name="image"/>

      <div class="select-none flex flex-col gap-1 text-lg z-20 h-full justify-end">
        <div class="bg-[var(--color-surface)]/70 p-6 rounded-md rounded-t-none flex flex-col gap-2">
          <h2 class="text-3xl font-semibold text-balance mb-4">
            {title}
          </h2>
          {subtitle && <p class="text-xl font-semibold text-[var(--color-primary)]/90">{subtitle}</p>}
      
          <slot name="content"/>
        </div>
      </div>
    </a>
  ) : (
    <article class={`
      ${className}
      relative rounded-xl
      backdrop-blur-md
      border border-black/10
      shadow-inner shadow-white/10
      col-span-5
      group
      overflow-hidden
      !text-[var(--color-text)]
    `}
    >
      <slot name="image"/>

      <div class="select-none flex flex-col gap-1 text-lg z-20 h-full justify-end">
        <div class="bg-[var(--color-surface)]/70 p-6 rounded-md rounded-t-none flex flex-col gap-2">
          <h2 class="text-3xl font-semibold text-balance mb-4">
            {title}
          </h2>
          {subtitle && <p class="text-xl font-semibold text-[var(--color-primary)]/90">{subtitle}</p>}
      
          <slot name="content"/>
        </div>
      </div>
    </article>
  )
}