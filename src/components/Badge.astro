---
import { getDarkModeVariant } from "@/lib/dark_colors";
import clsx from "clsx";

interface BadgeProps {
  color:
    | "gray"
    | "red"
    | "yellow"
    | "green"
    | "blue"
    | "indigo"
    | "purple"
    | "pink"
    | `#${string}`;
  label: string;
  type?: "ghost" | "outline";
}

const { color, label, type = "ghost" } = Astro.props as BadgeProps;

const isHexColor = (color: string) => /^#(?:[0-9a-f]{3}){1,2}$/i.test(color)
const isHex = isHexColor(color);

const ghostClasses = clsx(
  `bg-${color}-700/10`,
  `text-${color}-700`,
  `ring-${color}-700/10`,
  `dark:bg-${color}-400/30`,
  `dark:text-${color}-400`,
  `dark:ring-${color}-400/30`
);

const outlineClasses = clsx(
  `bg-${color}-500`,
  `dark:bg-${color}-400`
);

const style = isHex
  ? {
      '--badge-bg': `${color === '#ffffff' ? '#000000' : color}1A`, // 10% opacity
      '--badge-text': color === '#ffffff' ? '#000000' : color,
      '--badge-ring': `${color === '#ffffff' ? '#000000' : color}1A`,
      '--badge-bg-dark': `${color === '#ffffff' ? '#ffffff' : color === '#000000' ? '#ffffff' : getDarkModeVariant(color)}4D`, // 30% opacity
      '--badge-text-dark': color === '#ffffff' ? '#ffffff' : color === '#000000' ? '#ffffff' : getDarkModeVariant(color),
      '--badge-ring-dark': `${color === '#ffffff' ? '#ffffff' : color === '#000000' ? '#ffffff' : getDarkModeVariant(color)}4D`,
      '--badge-bg-dot': color === '#ffffff' ? '#000000' : color,
      '--badge-bg-dot-dark': color === '#ffffff' ? '#ffffff' : color === '#000000' ? '#ffffff' : getDarkModeVariant(color),
    }
  : undefined;

  /*
  Safelist para Tailwind:
  bg-gray-700 bg-red-700 bg-yellow-700 bg-green-700 bg-blue-700 bg-indigo-700 bg-purple-700 bg-pink-700
  bg-gray-700/10 bg-red-700/10 bg-yellow-700/10 bg-green-700/10 bg-blue-700/10 bg-indigo-700/10 bg-purple-700/10 bg-pink-700/10
  bg-gray-700/30 bg-red-700/30 bg-yellow-700/30 bg-green-700/30 bg-blue-700/30 bg-indigo-700/30 bg-purple-700/30 bg-pink-700/30
  text-gray-700 text-red-700 text-yellow-700 text-green-700 text-blue-700 text-indigo-700 text-purple-700 text-pink-700
  ring-gray-700 ring-red-700 ring-yellow-700 ring-green-700 ring-blue-700 ring-indigo-700 ring-purple-700 ring-pink-700
  bg-gray-500 bg-red-500 bg-yellow-500 bg-green-500 bg-blue-500 bg-indigo-500 bg-purple-500 bg-pink-500
  bg-gray-400 bg-red-400 bg-yellow-400 bg-green-400 bg-blue-400 bg-indigo-400 bg-purple-400 bg-pink-400
  text-gray-400 text-red-400 text-yellow-400 text-green-400 text-blue-400 text-indigo-400 text-purple-400 text-pink-400
  ring-gray-400 ring-red-400 ring-yellow-400 ring-green-400 ring-blue-400 ring-indigo-400 ring-purple-400 ring-pink-400
*/
---

<style is:global>
.badge-hex {
  background-color: var(--badge-bg);
  color: var(--badge-text);
  border-color: var(--badge-ring);
}
.dark .badge-hex {
  background-color: var(--badge-bg-dark);
  color: var(--badge-text-dark);
  border-color: var(--badge-ring-dark);
}

.dot-hex {
  background-color: var(--badge-bg-dot);
}
.dark .dot-hex {
  background-color: var(--badge-bg-dot-dark);
}
</style>

{type === "ghost" ? (
  <span
    class={`inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset ${
      isHex ? "badge-hex" : ghostClasses
    }`}
    style={style}
  >
    {label}
  </span>
) : (
  <span class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-[var(--color-text)] gap-2">
    <span
      class={clsx(
        "size-2 rounded-full",
        isHex ? "dot-hex" : outlineClasses
      )}
      style={style}
    ></span>
    {label}
  </span>
)}
